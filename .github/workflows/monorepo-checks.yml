name: Monorepo Checks

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint:
    name: Lint & Format (Node Projects)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [apps/api, apps/web, apps/docs, sdks/ts-sdk]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Run Linter
        run: npm run lint
      - name: Auto Format
        run: |
          if [ -f prettier.config.js ] || [ -f .prettierrc ]; then
            npx prettier . --write
          fi
          npx eslint . --fix || true

  typecheck:
    name: Type Check TS/JS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [apps/api, apps/web, apps/docs, sdks/ts-sdk]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run typecheck || npx tsc --noEmit

  format-python:
    name: Format Python Services (black)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [services/cyberdesk-operator, services/gateway]
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install black
      - name: Format with Black
        run: black .

  backend-tests:
    name: API Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm test

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [services/cyberdesk-operator, services/gateway]
    defaults:
      run:
        working-directory: ${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - run: pytest || echo "Add tests to ensure coverage"

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: GitGuardian/ggshield-action@v1

  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: github/codeql-action/init@v2
        with:
          languages: javascript, python
      - uses: github/codeql-action/analyze@v2
